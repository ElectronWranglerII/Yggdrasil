;* Yggdrasil (TM) Core Operating System (68K): Character Library
;* Copyright (C) DeRemee Systems, IXE Electronics LLC
;* Portions copyright IXE Electronics LLC, Republic Robotics,
;* FemtoLaunch, FemtoSat, FemtoTrack, Weland
;* This work is made available under the Creative Commons
;* Attribution-NonCommercial-ShareAlike 4.0 International License.
;* To view a copy of this license, visit
;* http://creativecommons.org/licenses/by-nc-sa/4.0/.


;CONVERTS A SINGLE DIGIT HEX VALUE TO A CHARACTER
;ON ENTRY:
;	D0.B = SINGLE DIGIT HEX VALUE
;ON RETURN:
;	D7.B = 0x00 IF VALUE IS HEXADECIMAL
;		D0.B	= CHARACTER
;	D7.B = 0xFF IF VALUE IS NOT HEXADECIMAL
;		D0.B	= 0x00
CHARFROMHEX:
    ;CHECK FOR GREATER THAN > 0x0F
    CMPI.B  #$10, D0
    BCC     CHARFROMHEXB
    ;CONVERT TO CHARACTER
    ADDI.B  #$30, D0
    ;CHARACTER > "9"?
    CMPI.B  #$3A, D0
    BCS     CHARFROMHEXA
    ;CONVERT TO LETTER
    ADDI.B  #$07, D0
CHARFROMHEXA:
    CLR.B   D7
    RTS
CHARFROMHEXB:
    CLR.B   D0
    MOVE.B  #$FF, D7
    RTS


;CONVERTS A SINGLE DIGIT INTEGER TO A CHARACTER
;ON ENTRY:
;	D0.B = SINGLE DIGIT INTEGER VALUE
;ON RETURN:
;	D7.B = 0x00 IF VALUE IS INTEGER
;		D0.B	= CHARACTER
;	D7.B = 0xFF IF VALUE IS NOT INTEGER
;		D0.B	= 0x00
CHARFROMINT:
    ;CHECK FOR GREATER THAN > 0x09
    CMPI.B  #$0A, D0
    BCC     CHARFROMINTA
    ;CONVERT TO CHARACTER
    ADDI.B  #$30, D0
    CLR.B   D7
    RTS
CHARFROMINTA:
    CLR.B   D0
    MOVE.B  #$FF, D7
    RTS


;CONVERTS A HEX CHARACTER TO AN INTEGER
;ON ENTRY:
;	D0.B = SINGLE DIGIT HEX CHARACTER
;ON RETURN:
;	D7.B = 0x00 IF CHARACTER IS HEX
;			D0.B = INTEGER VALUE
;	D7.B = 1 IF CHARACTER IS NOT HEX
;			D0.B = 0x00
CHARHEXTOINT:
    ;CHECK FOR LESS THAN "0"
    SUBI.B  #$30, D0
    BCS     CHARHEXTOINTC
    ;CHECK FOR GREATER THAN "9"
    CMPI.B  #$0A, D0
    BCC     CHARHEXTOINTB
CHARHEXTOINTA:
    CLR.B   D7
    RTS
CHARHEXTOINTB:
    ;CONVERT TO LETTER
    SUBI.B  #$07, D0
    ;CHECK FOR LESS THAN "A"
    CMPI.B  #$0A, D0
    BCS     CHARHEXTOINTC
    ;CHECK FOR GREATER THAN "F"
    CMPI.B  #$10, D0
    BCS     CHARHEXTOINTA
    ;CONVERT TO UPPERCASE
    SUBI.B  #$20, D0
    BCS     CHARHEXTOINTC
    ;CHECK FOR LESS THAN "A"
    CMPI.B  #$0A, D0
    BCS     CHARHEXTOINTC
    ;CHECK FOR GREATER THAN "F"
    CMPI.B  #$10, D0
    BCS     CHARHEXTOINTA
CHARHEXTOINTC:
    CLR.B   D0
    MOVE.B  #$FF, D7
    RTS


;RETURNS TRUE IF VALUE IS AN ARITHMETIC OPERATOR
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT AN ARITHMETIC OPERATOR
;	D7.B = 0xFF IF VALUE IS AN ARITHMETIC OPERATOR
CHARISARITH:
    ;CHECK FOR FACTORAL "!"
    CMPI.B  #$21, D0
    BEQ     CHARISARITHA
    ;CHECK FOR MODULO "%"
    CMPI.B  #$25, D0
    BEQ     CHARISARITHA
    ;CHECK FOR MULTIPLICATION "*"
    CMPI.B  #$2A, D0
    BEQ     CHARISARITHA
    ;CHECK FOR ADDITION "+"
    CMPI.B  #$2B, D0
    BEQ     CHARISARITHA
    ;CHECK FOR SUBTRACTION "-"
    CMPI.B  #$2D, D0
    BEQ     CHARISARITHA
    ;CHECK FOR DIVISION "/"
    CMPI.B  #$2F, D0
    BEQ     CHARISARITHA
    ;CHECK FOR EQUALS "="
    CMPI.B  #$3D, D0
    BEQ     CHARISARITHA
    ;CHECK FOR EXPONENT "^"
    CMPI.B  #$5E, D0
    BNE     CHARISARITHB
CHARISARITHA:
    MOVE.B  #$FF, D7
    RTS
CHARISARITHB:
    CLR.B   D7
    RTS


;RETURNS TRUE IF VALUE IS A CLOSING BRACKET
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT A CLOSING BRACKET
;	D7.B = 0xFF IF VALUE IS AN A CLOSING BRACKET
CHARISBRACC:
    ;CHECK FOR ")"
    CMPI.B  #$29, D0
    BEQ     CHARISBRACCA
    ;CHECK FOR "]"
    CMPI.B  #$5D, D0
    BEQ     CHARISBRACCA
    ;CHECK FOR "}"
    CMPI.B  #$7D, D0
    BNE     CHARISBRACCB
CHARISBRACCA:
    MOVE.B  #$FF, D7
    RTS
CHARISBRACCB:
    CLR.B   D7
    RTS


;RETURNS TRUE IF VALUE IS AN OPENING BRACKET
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT AN OPENING BRACKET
;	D7.B = 0xFF IF VALUE IS AN AN OPENING BRACKET
CHARISBRACO:
    ;CHECK FOR "("
    CMPI.B  #$28, D0
    BEQ     CHARISBRACOA
    ;CHECK FOR "["
    CMPI.B  #$5B, D0
    BEQ     CHARISBRACOA
    ;CHECK FOR "{"
    CMPI.B  #$7B, D0
    BNE     CHARISBRACOB
CHARISBRACOA:
    MOVE.B  #$FF, D7
    RTS
CHARISBRACOB:
    CLR.B   D7
    RTS


;RETURNS TRUE IF VALUE IS A NON-PRINTING CHARACTER
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT A NON-PRINTING CHARACTER
;	D7.B = 0xFF IF VALUE IS A NON-PRINTING CHARACTER
CHARISNPC:
    ;CHECK FOR LESS THAN 0x20
    CMPI.B  #$20, D0
    BCS     CHARISNPCA
    ;CHECK FOR 0x7F
    CMPI.B  #$7F, D0
    BEQ     CHARISNPCA
    CLR.B   D7
    RTS
CHARISNPCA:
    MOVE.B  #$FF, D7
    RTS


;RETURNS TRUE IF VALUE IS A HEX CHARACTER
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT A HEX CHARACTER
;	D7.B = 0xFF IF VALUE IS A HEX CHARACTER
CHARISHEX:
    ;CHECK FOR LESS THAN "0"
    CMPI.B  #$30, D0
    BCS     CHARISHEXB
    ;CHECK FOR GREATER THAN "9"
    CMPI.B  #$3A, D0
    BCS     CHARISHEXA
    ;CHECK FOR LESS THAN "A"
    CMPI.B  #$41, D0
    BCS     CHARISHEXB
    ;CHECK FOR GREATER THAN "F"
    CMPI.B  #$47, D0
    BCS     CHARISHEXA
    ;CHECK FOR LESS THAN "a"
    CMPI.B  #$61, D0
    BCS     CHARISHEXB
    ;CHECK FOR GREATER THAN "f"
    CMPI.B  #$67, D0
    BCC     CHARISHEXB
CHARISHEXA:
    MOVE.B  #$FF, D7
    RTS
CHARISHEXB:
    CLR.B   D7
    RTS


;RETURNS TRUE IF VALUE IS A LETTER
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT A LETTER
;	D7.B = 0xFF IF VALUE IS A LETTER
CHARISLETTER:
    ;CHECK FOR LESS THAN "A"
    CMPI.B  #$41, D0
    BCS     CHARISLETTERA
    ;CHECK FOR GREATER THAN "Z"
    CMPI.B  #$5B, D0
    BCS     CHARISLETTERB
    ;CHECK FOR LESS THAN "a"
    CMPI.B  #$61, D0
    BCS     CHARISLETTERA
    ;CHECK FOR GREATER THAN "z"
    CMPI.B  #$7B, D0
    BCS     CHARISLETTERB
CHARISLETTERA:
    CLR.B   D7
    RTS
CHARISLETTERB:
    MOVE.B  #$FF, D7
    RTS


;RETURNS TRUE IF VALUE IS A LOGICAL OPERATOR
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT A LOGICAL OPERATOR
;	D7.B = 0xFF IF VALUE IS AN A LOGICAL OPERATOR
CHARISLOGIC:
    ;CHECK FOR NOT "!"
    CMPI.B  #$21, D0
    BEQ     CHARISLOGICA
    ;CHECK FOR AND "&"
    CMPI.B  #$26, D0
    BEQ     CHARISLOGICA
    ;CHECK FOR XOR "^"
    CMPI.B  #$5E, D0
    BEQ     CHARISLOGICA
    ;CHECK FOR OR "|"
    CMPI.B  #$7C, D0
    BNE     CHARISLOGICB
CHARISLOGICA:
    MOVE.B  #$FF, D7
    RTS
CHARISLOGICB:
    CLR.B   D7
    RTS


;RETURNS TRUE IF VALUE IS A LOWERCASE LETTER
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT A LOWERCASE LETTER
;	D7.B = 0xFF IF VALUE IS A LOWERCASE LETTER
CHARISLOWER:
    ;CHECK FOR LESS THAN "a"
    CMPI.B  #$61, D0
    BCS     CHARISLOWERA
    ;CHECK FOR GREATER THAN "z"
    CMPI.B  #$7B, D0
    BCS     CHARISLOWERB
CHARISLOWERA:
    CLR.B   D7
    RTS
CHARISLOWERB:
    MOVE.B  #$FF, D7
    RTS


;RETURNS TRUE IF VALUE IS A NUMBER
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT A NUMBER
;	D7.B = 0x00 IF VALUE IS A NUMBER
CHARISNUMBER:
    ;CHECK FOR LESS THAN "0"
    CMPI.B  #$30, D0
    BCS     CHARISNUMBERA
    ;CHECK FOR GREATER THAN "9"
    CMPI.B  #$3A, D0
    BCS     CHARISNUMBERB
CHARISNUMBERA:
    CLR.B   D7
    RTS
CHARISNUMBERB:
    MOVE.B  #$FF, D7
    RTS


;RETURNS TRUE IF VALUE IS PUNCTUATION
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT PUNCTUATION
;	D7.B = 0xFF IF VALUE IS PUNCTUATION
CHARISPUNCT:
    ;CHECK FOR "!"
    CMPI.B  #$21, D0
    BEQ     CHARISPUNCTA
    ;CHECK FOR "."
    CMPI.B  #$2E, D0
    BEQ     CHARISPUNCTA
    ;CHECK FOR "?"
    CMPI.B  #$3F, D0
    BNE     CHARISPUNCTB
CHARISPUNCTA:
    MOVE.B  #$FF, D7
    RTS
CHARISPUNCTB:
    CLR.B   D7
    RTS


;RETURNS TRUE IF VALUE IS A RELATIONAL OPERATOR
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT A RELATIONAL OPERATOR
;	D7.B = 0xFF IF VALUE IS A RELATIONAL OPERATOR
CHARISREL:
    ;CHECK FOR LESS THAN "<"
    CMPI.B  #$3C, D0
    BCS     CHARISRELA
    ;CHECK FOR GREATER THAN ">"
    CMPI.B  #$3F, D0
    BCS     CHARISRELB
CHARISRELA:
    CLR.B   D7
    RTS
CHARISRELB:
    MOVE.B  #$FF, D7
    RTS


;RETURNS TRUE IF VALUE IS AN UPPERCASE LETTER
;ON ENTRY:
;	D0.B = VALUE
;ON RETURN:
;	D0.B = VALUE ON ENTRY
;	D7.B = 0x00 IF VALUE IS NOT AN UPPERCASE LETTER
;	D7.B = 0xFF IF VALUE IS AN UPPERCASE LETTER
CHARISUPPER:
    ;CHECK FOR LESS THAN "A"
    CMPI.B  #$41, D0
    BCS     CHARISUPPERA
    ;CHECK FOR GREATER THAN "Z"
    CMPI.B  #$5B, D0
    BCS     CHARISUPPERB
CHARISUPPERA:
    CLR.B   D7
    RTS
CHARISUPPERB:
    MOVE.B  #$FF, D7
    RTS


;CONVERTS THE CHARACTER IN A TO AN INTEGER
;ON ENTRY:
;	D0.B = CHARACTER
;ON RETURN:
;	D7.B = 0x00 IF CHARACTER IS AN INTEGER
;			D0.B = INTEGER VALUE
;	D7.B = 0xFF IF CHARACTER IS NOT AN INTEGER
;			D0.B = 0x00
CHARTOINT:
    ;CHECK FOR LESS THAN "0"
    SUBI.B  #$30, D0
    BCS     CHARTOINTA
    ;CHECK FOR GREATER THAN "9"
    CMPI.B  #$0A, D0
    BCC     CHARTOINTA
    CLR.B   D7
    RTS
CHARTOINTA:
    MOVE.B  #$FF, D7
    RTS


;CONVERTS AN UPPERCASE LETTER TO A LOWERCASE LETTER
;ON ENTRY:
;	D0.B = CHARACTER
;ON RETURN:
;	D7.B = 0x00 IF CHARACTER WAS UPPERCASE
;		D0.B = CONVERTED VALUE
;	D7.B = 0xFF IF CHARACTER WAS NOT UPPERCASE
;		D0.B = 0x00
CHARTOLOWER:
    ;CHECK FOR LESS THAN "A"
    CMPI.B  #$41, D0
    BCS     CHARTOLOWERA
    ;CHECK FOR GREATER THAN "Z"
    CMPI.B  #$5B, D0
    BCC     CHARTOLOWERA
    ADDI.B  #$20, D0
    CLR.B   D7
    RTS
CHARTOLOWERA:
    MOVE.B  #$FF, D7
    RTS


;CONVERTS A LOWERCASE LETTER TO AN UPPERCASE LETTER
;ON ENTRY:
;	D0.B = CHARACTER
;ON RETURN:
;	D7.B = 0x00 IF CHARACTER WAS LOWERCASE
;		D0.B = CONVERTED VALUE
;	D7.B = 0xFF IF CHARACTER WAS NOT LOWERCASE
;		D0.B = 0x00
CHARTOUPPER:
    ;CHECK FOR LESS THAN "a"
    CMPI.B  #$61, D0
    BCS     CHARTOUPPERA
    ;CHECK FOR GREATER THAN "z"
    CMPI.B  #$7B, D0
    BCC     CHARTOUPPERA
    SUBI.B  #$20, D0
    CLR.B   D7
    RTS
CHARTOUPPERA:
    MOVE.B  #$FF, D7
    RTS
